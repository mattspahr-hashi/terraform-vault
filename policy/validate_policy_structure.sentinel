# This policy validates Vault policy structure and capabilities

import "tfplan"
import "strings"

# Get all Vault policies
vault_policies = filter tfplan.resource_changes as _, rc {
    rc.type == "vault_policy"
}

# Check if policy has required capabilities
has_required_capabilities = func(policy_doc) {
    required_caps = ["read", "list"]
    all_caps_present = true
    for required_caps as cap {
        if not (strings.contains(policy_doc, "\"" + cap + "\"") or
                strings.contains(policy_doc, "'" + cap + "'") or
                strings.contains(policy_doc, cap)) {
            all_caps_present = false
        }
    }
    return all_caps_present
}

# Validate each policy
main = rule {
    result = true
    for vault_policies as _, rc {
        policy_doc = rc.change.after.policy
        if not has_required_capabilities(policy_doc) {
            print("Policy missing required capabilities:", rc.address)
            result = false
        }
    }
    return result
}
